# Find MOAB cmake config file
# Only used to determine the location of the HDF5 with which MOAB was built
message("")
message(STATUS "=============")
message(STATUS "Locating HDF5")
message(STATUS "=============")
set(MOAB_SEARCH_DIRS)
file(GLOB MOAB_SEARCH_DIRS ${MOAB_SEARCH_DIRS} "${MOAB_DIR}/lib/cmake/MOAB")
find_path(MOAB_CMAKE_CONFIG
  NAMES MOABConfig.cmake
  PATHS ${MOAB_SEARCH_DIRS}
  NO_DEFAULT_PATH)
if (MOAB_CMAKE_CONFIG)
  set(MOAB_CMAKE_CONFIG ${MOAB_CMAKE_CONFIG}/MOABConfig.cmake)
  message(STATUS "MOAB_CMAKE_CONFIG: ${MOAB_CMAKE_CONFIG}")
else ()
  message(FATAL_ERROR "Could not find MOAB. Please, set -DMOAB_DIR=<MOAB_DIR> when running cmake.")
endif ()

# Find HDF5
include(${MOAB_CMAKE_CONFIG})
set(ENV{PATH} "${HDF5_DIR}:$ENV{PATH}")
set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_STATIC_LIBRARY_SUFFIX})
find_package(HDF5 REQUIRED)
set(HDF5_LIBRARIES_STATIC ${HDF5_LIBRARIES})
set(HDF5_LIBRARIES)
message(STATUS "HDF5_INCLUDE_DIRS: ${HDF5_INCLUDE_DIRS}")
message(STATUS "HDF5_LIBRARIES_STATIC: ${HDF5_LIBRARIES_STATIC}")
include_directories(${HDF5_INCLUDE_DIRS})

message("")
message(STATUS "=============")
message(STATUS  "Locating MOAB")
message(STATUS "=============")
# Find MOAB
if (BUILD_SHARED)
  set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_SHARED_LIBRARY_SUFFIX})
  find_library(MOAB_LIBRARIES_SHARED
      NAMES MOAB
      HINTS ${MOAB_LIBRARY_DIRS}
      NO_DEFAULT_PATH)
  list(APPEND MOAB_LIBRARIES_SHARED)
else()
    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_STATIC_LIBRARY_SUFFIX})
    find_library(MOAB_LIBRARIES_STATIC
        NAMES MOAB
        HINTS ${MOAB_LIBRARY_DIRS}
        NO_DEFAULT_PATH)
    list(APPEND MOAB_LIBRARIES_STATIC)
endif()

if(MOAB_FOUND AND NOT DEFINED MOAB_LIBRARY_DIRS)
    set(MOAB_LIBRARY_DIRS "${MOAB_DIR}/lib")
endif(MOAB_FOUND AND NOT DEFINED MOAB_LIBRARY_DIRS)

if(MOAB_FOUND AND NOT DEFINED MOAB_INCLUDE_DIRS)
    set(MOAB_INCLUDE_DIRS "${MOAB_DIR}/include")
endif(MOAB_FOUND AND NOT DEFINED MOAB_INCLUDE_DIRS)

if (MOAB_FOUND AND DEFINED MOAB_INCLUDE_DIRS AND DEFINED MOAB_LIBRARY_DIRS)
  message(STATUS "Found MOAB")
else ()
  message(FATAL_ERROR "Could not find MOAB")
endif ()
message(STATUS "MOAB_INCLUDE_DIRS: ${MOAB_INCLUDE_DIRS}")
message(STATUS "MOAB_LIBRARY_DIRS: ${MOAB_LIBRARY_DIRS}")
if (BUILD_SHARED)
    message(STATUS "MOAB_LIBRARIES_SHARED: ${MOAB_LIBRARIES_SHARED}")
else()
    message(STATUS "MOAB_LIBRARIES_STATIC: ${MOAB_LIBRARIES_STATIC}")
endif()
include_directories(${MOAB_INCLUDE_DIRS})
message("")

