set(MOAB_FOUND False)
if(NOT MOAB_FOUND)
    file(GLOB MOAB_SEARCH_DIRS ${MOAB_SEARCH_DIRS} "${MOAB_DIR}/build/lib/cmake/MOAB")
    find_path(MOAB_CMAKE_CONFIG
    NAMES MOABConfig.cmake
    PATHS ${MOAB_SEARCH_DIRS}
    NO_DEFAULT_PATH)
    if (MOAB_CMAKE_CONFIG)
        set(MOAB_CMAKE_CONFIG "${MOAB_CMAKE_CONFIG}/MOABConfig.cmake")
        set(MOAB_FOUND True)
        message(STATUS "MOAB found")
    else (MOAB_CMAKE_CONFIG)
        message(FATAL_ERROR "Could not find MOAB. Set -DMOAB_DIR=<MOAB_DIR>")
    endif (MOAB_CMAKE_CONFIG)
else(NOT MOAB_FOUND)
    message(STATUS "MOAB found")
    set(MOAB_FOUND True)
endif(NOT MOAB_FOUND)

if(MOAB_FOUND AND NOT DEFINED MOAB_LIBRARY_DIRS)
    set(MOAB_LIBRARY_DIRS "${MOAB_DIR}/build/lib")
endif(MOAB_FOUND AND NOT DEFINED MOAB_LIBRARY_DIRS)

if(MOAB_FOUND AND NOT DEFINED MOAB_INCLUDE_DIRS)
    set(MOAB_INCLUDE_DIRS "${MOAB_DIR}/build/include")
endif(MOAB_FOUND AND NOT DEFINED MOAB_INCLUDE_DIRS)

if(DEFINED MOAB_LIBRARY_DIRS AND DEFINED MOAB_INCLUDE_DIRS)
    add_library(MOAB INTERFACE)
    install (TARGETS MOAB DESTINATION "${PROJECT_BINARY_DIR}/bin")
    target_link_directories(MOAB INTERFACE ${MOAB_LIBRARY_DIRS})
    target_link_libraries(MOAB INTERFACE ${MOAB_LIBRARIES})
    target_include_directories(MOAB INTERFACE ${MOAB_INCLUDE_DIRS})
    message(STATUS "MOAB include_dir ${MOAB_INCLUDE_DIRS}")
endif(DEFINED MOAB_LIBRARY_DIRS AND DEFINED MOAB_INCLUDE_DIRS)

